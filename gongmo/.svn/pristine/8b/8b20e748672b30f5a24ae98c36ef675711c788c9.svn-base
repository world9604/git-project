<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/tx/spring-mvc.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
	<message-converters>
        <!-- @ResponseBody로 String 처리할때 한글처리 -->
        <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
            <beans:property name="supportedMediaTypes">
                <beans:list>
      		              <beans:value>text/html;charset=UTF-8</beans:value>
                         <beans:value>text/plain;charset=UTF-8</beans:value>
                </beans:list>
            </beans:property>
        </beans:bean>
    </message-converters>
	</annotation-driven>
	
	<aop:aspectj-autoproxy />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="maxUploadSize" value="100000000" />
        <beans:property name="maxInMemorySize" value="100000000" />
    </beans:bean>
		
	<context:component-scan base-package="com.mvcdemoweb.controller" />
	<context:component-scan base-package="com.mvcdemoweb.aop" />
	<context:component-scan base-package="com.mvcdemoweb.model.service" />
	<context:component-scan base-package="com.mvcdemoweb.model.handler" />
	
	<!-- 미리 만든 Advice(언제 공통 관심 기능을 핵심 로직에 적용할지를 정의) -->
	<tx:advice id="txAdvice2" transaction-manager="txManager"><!-- transaction-manager에는 platformTransactionManager -->
		<tx:attributes>
			<tx:method name="*Tx3"/>
		</tx:attributes>
	</tx:advice>
	
		
	<aop:config>
		<aop:pointcut id="txPointcut" 
			expression="within(*..*Controller)" />
			
			
		<aop:advisor advice-ref="txAdvice2" 
			pointcut-ref="txPointcut"/>
	
			
		<!-- //직접 Advice 클래스를 만들어서 사용
		<aop:aspect id="txAspect" ref="txAdvice">
			<aop:pointcut id="txPointcut" 
				expression="execution(* *..*.*Tx3(..))" />
			<aop:around pointcut-ref="txPointcut" method="doInTransaction" />
		</aop:aspect>
		-->
			
	</aop:config>
	



	
</beans:beans>








